library(merTools)
?predictInterval
remotes::install_github("ramiromagno/gwasrapidd")
library(remotes)
remotes::install_github("ramiromagno/gwasrapidd")
install_github("ramiromagno/gwasrapidd")
covards <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/tmp_whr_covars.rds")
rm(list = c("covars"))
rm(list = c("covards"))
covars <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/tmp_whr_covars.rds")
dat <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/tmp_whr_dat.rds")
dat <- list("WHR" = dat)
covars <- list("WHR" = covars)
p <- "WHR"
sx <- "M"
model_dat <- merge(dat, covars, by = "eid")
dat <- dat[[1]]
covars <- covars[[1]]
model_dat <- merge(dat, covars, by = "eid")
head(model_dat)
test <- model_dat$age_event - model_dat$baseline_age
summary(test)
sub_dat <- mdoel_dat %>% filter(sex == "M")
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20),
data = sub_dat,
method = "REML")
library(mgcv)
sub_dat <- model_dat %>% filter(sex == "M")
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20),
data = sub_dat,
method = "REML")
# Add in covariates
model_dat <- merge(dat, covars, by = "eid")
# GAM
library(mgcv)
sub_dat <- model_dat %>% filter(sex == "M")
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20),
data = sub_dat,
method = "REML")
sub_dat <- model_dat %>% filter(sex == "M")
library(tidyverse)
sub_dat <- model_dat %>% filter(sex == "M")
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20),
data = sub_dat,
method = "REML")
fit_vals <- fitted(gam_20)
head(fit_vals)
length(fit_vals)
dim(sub_dat)
sub_dat$gam_20_fit <- fitted(gam_20)
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_20_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
theme_set(theme_bw())
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_20_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
formula(gam_20)
mmat <- model.matrix(gam_20)
View(mmat)
dim(mmat)
colnames(mmat)
head(coef(gam_20))
tmp <- coef(gam_20)
head(tmp)
length(tmp)
tmp <- diag(coef(gam_20))
dim(tmp)
head(tmp)
?ggmatplot
sub_dat <- model_dat %>% filter(sex == "M")
gam_50 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 50),
data = sub_dat,
method = "REML")
sub_dat$gam_50_fit <- fitted(gam_50)
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_50_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
library(gratia)
gam_20 %>% gratia::penalty() %>% gratia::draw()
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20,
sp = 10),
data = sub_dat,
method = "REML")
sub_dat$gam_20_fit <- fitted(gam_20)
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_20_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
gam_20 <- gam(value ~ 1 + data_provider + s(age_event,
bs = "cr", k = 20,
sp = 100),
data = sub_dat,
method = "REML")
sub_dat$gam_20_fit <- fitted(gam_20)
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_20_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
summary(gam_20)
sub_dat <- model_dat %>% filter(sex == "M")
# Set number of knots and smoothing parameter #
# (higher sp = less wiggly)
gam_15 <- gam(value ~ 1 + data_provider +
s(age_event, bs = "cr", k = 15, sp = 100),
data = sub_dat,
method = "REML")
sub_dat$gam_15_fit <- fitted(gam_15)
ggplot(sub_dat, aes(x = age_event, y = value)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = gam_15_fit), color = "blue") +
labs(x = "Age at visit", y = "WHR")
summary(gam_15)
basis_cr <- smoothCon(s(age_event, k = 15, bs = "cr"),
data = sub_dat,
absorb.cons = T)
gratia::penalty(basis_cr[[1]]) %>%
gratia::draw()
basis_cr
basis_cr <- smoothCon(s(age_event, k = 15, bs = "cr"),
data = sub_dat,
absorb.cons = T,
diagonal.penalty = 1)
gratia::penalty(basis_cr[[1]]) %>%
gratia::draw()
re <- smooth2random(basis_cr[[1]], "", type = 2)
spline_ages <- ns(sub_dat$age_event, df = 5)
library(nlme)
library(splines)
spline_ages <- ns(sub_dat$age_event, df = 5)
dim(spline_ages)
head(spline_ages)
tail(spline_ages)
sub_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = 5))
colnames(sub_dat)
sub_dat <- model_dat %>% filter(sex == "M")
NDF <- 5
sub_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(sub_dat)[ncol(sub_dat)-NDF:ncol(sub_dat)] <-
paste0("ns", 1:NDF)
sub_dat <- model_dat %>% filter(sex == "M")
NDF <- 5
sub_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(sub_dat)[ncol(sub_dat)-NDF:ncol(sub_dat)] <-
paste0("ns", 1:NDF)
colnames(sub_dat)
ncol(sub_dat)
ncol(sub_dat)-NDF:ncol(sub_dat)
sub_dat <- model_dat %>% filter(sex == "M")
NDF <- 5
mod1_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(mod1_dat)[(ncol(mod1_dat)-NDF):ncol(mod1_dat)] <-
paste0("ns", 1:NDF
colnames(mod1_dat)
NDF <- 5
mod1_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(mod1_dat)[(ncol(mod1_dat)-NDF):ncol(mod1_dat)] <-
paste0("ns", 1:NDF)
(ncol(mod1_dat)-NDF):ncol(mod1_dat)
colnames(mod1_dat)[(ncol(mod1_dat)-NDF+1):ncol(mod1_dat)] <-
paste0("ns", 1:NDF)
colnames(mod1_dat)
mod_1 <- nlme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
groups = ~eid)
?nlme
c(30, 10, -3)
mod_1 <- nlme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
groups = ~eid,
start = c(0.9, 0, 0, 0, 0, 0))
mod_1 <- nlme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 ~ 1,
groups = ~eid,
start = c(0.9, 0, 0, 0, 0, 0))
head(mod1_dat)
sub_dat <- model_dat %>% filter(sex == "M")
NDF <- 5
mod1_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(mod1_dat)[(ncol(mod1_dat)-NDF+1):ncol(mod1_dat)] <-
paste0("ns", 1:NDF)
(ncol(mod1_dat)-NDF+1):ncol(mod1_dat)
colnames(mod1_dat)
mod_1 <- nlme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 ~ 1,
groups = ~eid,
start = c(0.9, 0, 0, 0, 0, 0))
NDF <- 5
mod1_dat <- bind_cols(sub_dat,
ns(sub_dat$age_event, df = NDF))
colnames(mod1_dat)[(ncol(mod1_dat)-NDF+1):ncol(mod1_dat)] <-
paste0("ns", 1:NDF)
mod1_dat$eid_f <- factor(mod1_dat$eid)
mod_1 <- nlme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 ~ 1,
groups = ~eid_f,
start = c(0.9, 0, 0, 0, 0, 0))
mod_1 <- lme(value ~ b0 + b1*ns1 + b2*ns2 + b3*ns3 +
b4*ns4 + b5*ns5,
data = mod1_dat,
fixed = b0 + b1 + b2 + b3 + b4 + b5 ~ 1,
random = b0 ~ 1,
groups = ~eid_f,
start = c(0.9, 0, 0, 0, 0, 0))
mod_linear <- lme(value ~ age_event,
data = sub_dat,
random = 1 + age_event | eid,
na.action = na.omit)
colnames(sub_dat)
library(nlme)
library(splines)
mod_linear <- lme(value ~ age_event,
data = sub_dat,
random = 1 + age_event|eid,
na.action = na.omit)
mod_linear <- lme(value ~ age_event,
data = sub_dat,
random = 1 + age_event|eid)
blups <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/lmm_blups_WHR.rds")
length(blups)
names(blups)
head(blups[[1]])
blups[[1]]
blups <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/lmm_blups_WC.rds")
View(blups[[1]])
tmp <- data.frame(blups[[1]])
head(tmp)
blups <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/lmm_blups_WHR.rds")
blups <- readRDS("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/lmm_blups_WHR.rds")
head(blups[[1]])
colnames(blups[[2]])
library(tidyverse)
?pivot_longer
blups <- list("WHR" = blups)
SEX_STRATA <- c("F", "M", "sex_comb")
per_sex <- lapply(SEX_STRATA, function (sx) {
res <- blups[[p]][[sx]]
res$eid <- rownames(res)
res <- res %>% pivot_longer(cols = -eid,
names_to = "term",
values_to = "BLUP")
res_plot <- ggplot(res, aes(x = BLUP)) +
facet_wrap(~term, scales = "free") +
geom_density() +
labs(x = "BLUP", title = paste0("BLUP distributions in ",
sx, " phenotype: ", p)) +
theme(legend.position = "none")
return (res)
})
p <- "WHR"
per_sex <- lapply(SEX_STRATA, function (sx) {
res <- blups[[p]][[sx]]
res$eid <- rownames(res)
res <- res %>% pivot_longer(cols = -eid,
names_to = "term",
values_to = "BLUP")
res_plot <- ggplot(res, aes(x = BLUP)) +
facet_wrap(~term, scales = "free") +
geom_density() +
labs(x = "BLUP", title = paste0("BLUP distributions in ",
sx, " phenotype: ", p)) +
theme(legend.position = "none")
return (res)
})
per_sex
per_sex <- lapply(SEX_STRATA, function (sx) {
res <- blups[[p]][[sx]]
res$eid <- rownames(res)
res <- res %>% pivot_longer(cols = -eid,
names_to = "term",
values_to = "BLUP")
res_plot <- ggplot(res, aes(x = BLUP)) +
facet_wrap(~term, scales = "free") +
geom_density() +
labs(x = "BLUP", title = paste0("BLUP distributions in ",
sx, " phenotype: ", p)) +
theme(legend.position = "none")
return (res_plot)
})
print(per_sex)
