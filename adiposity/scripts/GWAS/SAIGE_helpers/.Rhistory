library(RColorBrewer)
brewer.pal(n=6, "Dark2")
library(tidyverse)
library(paletteer)
library(scales)
theme_set(theme_bw())
# Read and wrangle data ----
PHENOTYPES <- "Weight"
SEX_STRATA <- "sex_comb"
enrichment_res <- lapply(PHENOTYPES, function (p) {
all_pheno <- lapply(SEX_STRATA, function (sx) {
df <- read.table(paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/2204_models/clustering/disease_enrichment/fisher_",
p, "_", sx, ".txt"),
sep = "\t", header = T, quote = "", comment.char = "@")
df <- df %>% pivot_longer(cols = starts_with("cluster"),
names_to = c("cluster", ".value"),
names_pattern = "cluster(.)_(.*)") %>%
mutate(neglogp = -log10(pval),
sex_strata = sx,
phenotype = p,
disease = gsub('"', "", disease))
return (df)
})
names(all_pheno) <- SEX_STRATA
return (all_pheno)
})
names(enrichment_res) <- PHENOTYPES
annot_dictionary <-
read.table("C:/Users/samvida/Documents/Lindgren Group/Resources/UKBIOBANK/UKB_codelists/chronological-map-phenotypes/annot_dictionary.txt",
sep = "\t", header = T, stringsAsFactors = F, quote = "")
annot_dictionary$phenotype <- gsub('"', "", annot_dictionary$phenotype)
# Wrangle data for plot ----
# Highlight points that are phenome-wide significant, i.e.
# pval < 0.05 / (302 * 4 * 3)
# This is a very conservative threshold as diseases are related to each other
# Also create a plot_y variable that is -log10(pval), but POSITIVE for over-rep
# and NEGATIVE for under-rep in order to show the difference; draw a line
# through 0 to show the split
PTHRESH <- 0.05 / (302 * 4 * 3)
plot_res <- lapply(enrichment_res, function (sx_list) {
res <- lapply(sx_list, function (df) {
# If pvalue is 0 from enrichment results, change it to lowest possible pval
LOWEST_P <- min(df$pval[df$pval != 0])
for_plot <- df %>%
mutate(bottom_pval = ifelse(pval == 0, LOWEST_P, pval),
highlight = bottom_pval < PTHRESH,
plot_y = ifelse(effect_case == "over-represented",
-log10(bottom_pval), log10(bottom_pval)),
disease = factor(disease),
cluster = factor(cluster),
ICD_chapter =
annot_dictionary$ICD_chapter[match(disease,
annot_dictionary$phenotype)])
return (for_plot)
})
return (res)
})
# Create color palette
ALL_CHAPS <- sort(unique(annot_dictionary$ICD_chapter))
col_values <-
colorRampPalette(paletteer_d("jcolors::pal8"))(length(ALL_CHAPS))
names(col_values) <- ALL_CHAPS
# PheWAS plot for all clusters in each strata ----
all_res_phewas <- lapply(PHENOTYPES, function (p) {
plots <- lapply(SEX_STRATA, function (sx) {
plot_dat <- plot_res[[p]][[sx]]
res <- ggplot(data = plot_dat %>% filter(!highlight),
aes(x = cluster, y = plot_y)) +
geom_jitter(colour = "grey", size = 2) +
geom_jitter(data = plot_dat %>% filter(highlight),
aes(color = ICD_chapter), size = 2) +
scale_color_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
legend.position = "none")
tiff(filename = paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/Reports/EMGM/figures/disease_enrichment/", p, "_", sx, "_all_clusters.tiff"),
height = 7, width = 14, units = "cm",
res = 300)
print(res)
dev.off()
return (res)
})
names(plots) <- SEX_STRATA
})
names(all_res_phewas) <- PHENOTYPES
p <- "Weight"
sx <- "sex_comb"
plot_dat <- plot_res[[p]][[sx]]
View(plot_dat)
sig_results <- plot_dat %>% filter(highlight)
View(sig_results)
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight) %>%
summarise(nclusts = n(),
point_shape = nclusts > 1,
plot_p = min(bottom_pval),
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)))
View(dis_plot_dat)
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)))
View(dis_plot_dat)
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(color = ICD_chapter), size = 2) +
scale_color_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight, ICD_chapter) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)))
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(color = ICD_chapter), size = 2) +
scale_color_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
dis_levels <- annot_dictionary$phenotype[order(annot_dictionary$ICD_chapter)]
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight, ICD_chapter) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)),
disease = factor(as.character(disease),
levels = dis_levels))
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(color = ICD_chapter), size = 2) +
scale_color_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
head(dis_plot_dat$disease)
dis_levels
# Create color palette
ALL_CHAPS <- sort(unique(annot_dictionary$ICD_chapter))
col_values <-
colorRampPalette(paletteer_d("jcolors::pal8"))(length(ALL_CHAPS))
names(col_values) <- ALL_CHAPS
#
col_values
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight, ICD_chapter) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)),
disease = factor(as.character(disease),
levels = dis_levels)) %>%
arrange(disease)
plot_dat %>%
group_by(disease, effect_case, highlight, ICD_chapter) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)),
disease = factor(as.character(disease),
levels = dis_levels)) %>%
arrange(ICD_chapter)
dis_plot_dat <- plot_dat %>%
group_by(disease, effect_case, highlight, ICD_chapter) %>%
summarise(nclusts = n(), plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = ifelse(effect_case == "over-represented",
-log10(plot_p), log10(plot_p)),
disease = factor(as.character(disease),
levels = dis_levels)) %>%
arrange(ICD_chapter)
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
dis_plot_dat$disease
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
res <- ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
tiff(filename = paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/Reports/EMGM/figures/disease_enrichment/", p, "_", sx, "_all_diseases.tiff"),
height = 7, width = 14, units = "cm",
res = 300)
print(res)
dev.off()
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
geom_hline(yintercept = log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(-350, 350),
breaks = seq(-350, 350, by = 100),
labels = abs(seq(-350, 350, by = 100)))
ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(0, 350),
breaks = seq(0, 350, by = 100),
labels = abs(seq(0, 350, by = 100)))
dis_plot_dat <- plot_dat %>%
filter(effect_case == "over-represented")
group_by(disease, highlight, ICD_chapter) %>%
summarise(nclusts = n(),
plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = -log10(plot_p),
disease = factor(as.character(disease),
levels = dis_levels))
res <- ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(0, 350),
breaks = seq(0, 350, by = 100),
labels = abs(seq(0, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
tiff(filename = paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/Reports/EMGM/figures/disease_enrichment/", p, "_", sx, "_overrep_diseases.tiff"),
height = 7, width = 14, units = "cm",
res = 300)
print(res)
dev.off()
dis_plot_dat <- plot_dat %>%
filter(effect_case == "over-represented") %>%
group_by(disease, highlight, ICD_chapter) %>%
summarise(nclusts = n(),
plot_p = min(bottom_pval)) %>%
mutate(point_shape = nclusts > 1,
plot_y = -log10(plot_p),
disease = factor(as.character(disease),
levels = dis_levels))
res <- ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(0, 350),
breaks = seq(0, 350, by = 100),
labels = abs(seq(0, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
tiff(filename = paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/Reports/EMGM/figures/disease_enrichment/", p, "_", sx, "_overrep_diseases.tiff"),
height = 7, width = 14, units = "cm",
res = 300)
print(res)
dev.off()
res <- ggplot(data = dis_plot_dat %>% filter(!highlight),
aes(x = disease, y = plot_y, shape = point_shape)) +
geom_point(colour = "grey", size = 2) +
geom_point(data = dis_plot_dat %>% filter(highlight),
aes(colour = ICD_chapter), size = 2) +
scale_colour_manual(values = col_values, guide = "none") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = -log10(PTHRESH), linetype = "dashed") +
scale_x_discrete(limits = dis_levels) +
scale_y_continuous(limits = c(0, 350),
breaks = seq(0, 350, by = 100),
labels = abs(seq(0, 350, by = 100))) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
tiff(filename = paste0("C:/Users/samvida/Documents/Lindgren Group/Adiposity_Primary_Care/Reports/EMGM/figures/disease_enrichment/", p, "_", sx, "_overrep_diseases.tiff"),
height = 7, width = 14, units = "cm",
res = 300)
print(res)
dev.off()
View(dis_plot_dat)
View(dis_plot_dat)
-1:-3
brewer.pal(5, "Set1")
library(RColorBrewer)
brewer.pal(5, "Set1")
